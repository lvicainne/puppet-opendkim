<%- | Stdlib::Absolutepath $pidfile,
      String $mode,
      Variant[Boolean,Enum['yes','no']] $log_why,
      String[1] $user,
      String[1] $group,
      String $socket,
      Pattern[/\A[0-7]{3,4}\z/] $umask,
      String $canonicalization,
      Boolean $alldomain,
      Optional[String[1]] $selector,
      Stdlib::Absolutepath $configdir,
      Variant[Boolean,Enum['yes','no']] $subdomains,
      Array[Stdlib::IP::Address] $nameservers,
      Variant[Boolean,Enum['yes','no']] $removeoldsignatures,
      Optional[Integer] $maximum_signed_bytes,
      Optional[Stdlib::Absolutepath] $trustanchorfile,
      Optional[Array[String,1]] $senderheaders,
      Optional[String[1]] $signaturealgorithm,
      Optional[Integer[1]] $minimumkeybits,
      Hash[String,Variant[Array[String],String,Integer,Boolean]] $additional_options
| -%>
# THIS FILE IS MANAGED BY PUPPET

# Specifies the path to the process ID file.
PidFile <%= $pidfile %>

# Selects operating modes. Valid modes are s (signer) and v (verifier). Default is v.
Mode <%= $mode %>

# Log activity to the system log.
Syslog  yes

# Log additional entries indicating successful signing or verification of messages.
SyslogSuccess yes

# If logging is enabled, include detailed logging about why or why not a message was
# signed or verified. This causes a large increase in the amount of log data generated
# for each message, so it should be limited to debugging use only.
LogWhy <%= $log_why ? { true => 'yes', false => 'no', default => $log_why } %>

# Attempt to become the specified user before starting operations.
UserID  <%= $user %>:<%= $group %>

# Create a socket through which your MTA can communicate.
Socket  <%= $socket %>

# Required to use local socket with MTAs that access the socket as a non-
# privileged user (e.g. Postfix)
Umask   <%= $umask %>

# This specifies a file in which to store DKIM transaction statistics.
#Statistics              /var/spool/opendkim/stats.dat

## SIGNING OPTIONS

# Selects the canonicalization method(s) to be used when signing messages.
Canonicalization        <%= $canonicalization %>

# Domain(s) whose mail should be signed by this filter. Mail from other domains will
# be verified rather than being signed. Uncomment and use your domain name.
# This parameter is not required if a SigningTable is in use.
<% if $alldomain { -%>
Domain *
<% } else { -%>
#Domain                  test.fr
<% } -%>

# Defines the name of the selector to be used when signing messages.
<% if $alldomain { -%>
Selector                <%= $selector %>
<% } else { -%>
#Selector                default
<% } -%>

# Gives the location of a private key to be used for signing ALL messages.
<% if $alldomain { -%>
KeyFile                 <%= $configdir %>/keys/<%= $selector %>
<% } else { -%>
#KeyFile                 /etc/opendkim/keys/default.private
<% } -%>

# Gives the location of a file mapping key names to signing keys. In simple terms,
# this tells OpenDKIM where to find your keys. If present, overrides any KeyFile
# setting in the configuration file.
<% if $alldomain { -%>
#KeyTable                /etc/opendkim/KeyTable
<% } else { -%>
KeyTable                refile:<%= $configdir %>/KeyTable
<% } -%>

# Defines a table used to select one or more signatures to apply to a message based
# on the address found in the From: header field. In simple terms, this tells
# OpenDKIM how to use your keys.
<% if $alldomain { -%>
#SigningTable            refile:/etc/opendkim/SigningTable
<% } else { -%>
SigningTable            refile:<%= $configdir %>/SigningTable
<% } -%>

# Identifies a set of "external" hosts that may send mail through the server as one
# of the signing domains without credentials as such.
ExternalIgnoreList      refile:<%= $configdir %>/TrustedHosts

# Identifies a set internal hosts whose mail should be signed rather than verified.
InternalHosts           refile:<%= $configdir %>/TrustedHosts

# Contains a list of IP addresses, CIDR blocks, hostnames or domain names
# whose mail should be neither signed nor verified by this filter.  See man
# page for file format.
#PeerList    X.X.X.X

# Always oversign From (sign using actual From and a null From to prevent
# malicious signatures header fields (From and/or others) between the signer
# and the verifier.  From is oversigned by default in the Debian pacakge
# because it is often the identity key used by reputation systems and thus
# somewhat security sensitive.
OversignHeaders         From

SubDomains             <%= $subdomains ? { true => 'yes', false => 'no', default => $subdomains } %>

<% unless $nameservers.empty { -%>
Nameservers            <%= $nameservers.join(',') %>
<% } -%>

# Removes all existing signatures when operating in signing mode.
RemoveOldSignatures    <%= $removeoldsignatures ? { true => 'yes', false => 'no', default => $removeoldsignatures } %>

<% unless $maximum_signed_bytes.empty { -%>
##  MaximumSignedBytes n
##
##  Don't sign more than "n" bytes of the message.  The default is to
##  sign the entire message.  Setting this implies "BodyLengths".

MaximumSignedBytes <%= $maximum_signed_bytes %>
<% } -%>

<% unless $trustanchorfile.empty { -%>
TrustAnchorFile        <%= $trustanchorfile %>

<% } -%>
<% unless $senderheaders.empty { -%>

SenderHeaders          <%= $senderheaders.join(',') %>
<% } -%>
<% unless $signaturealgorithm.empty { -%>
SignatureAlgorithm     <%= $signaturealgorithm %>

<% } -%>
<% unless $minimumkeybits.empty { -%>
MinimumKeyBits         <%= $minimumkeybits %>

<% } -%>
<% $additional_options.each |String $_key, Variant[Array[String],String,Integer,Boolean] $_value| { -%>
<%   case $_value { -%>
<%     Array[String,1]: { -%>
<%= $_key %> <%= $_value.join(',') %>
<%     } -%>
<%     Boolean: { -%>
<%= $_key %> <%= $_value ? { true => 'yes', false => 'no', default => $_value } %>
<%     } -%>
<%     String, Integer: { -%>
<%= $_key %> <%= $_value %>
<%     } -%>
<%   } -%>
<% } -%>
